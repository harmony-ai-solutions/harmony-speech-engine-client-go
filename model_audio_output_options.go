/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AudioOutputOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AudioOutputOptions{}

// AudioOutputOptions struct for AudioOutputOptions
type AudioOutputOptions struct {
	Format     NullableString `json:"format,omitempty"`
	SampleRate NullableInt32  `json:"sample_rate,omitempty"`
	Stream     NullableBool   `json:"stream,omitempty"`
}

// NewAudioOutputOptions instantiates a new AudioOutputOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAudioOutputOptions() *AudioOutputOptions {
	this := AudioOutputOptions{}
	return &this
}

// NewAudioOutputOptionsWithDefaults instantiates a new AudioOutputOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAudioOutputOptionsWithDefaults() *AudioOutputOptions {
	this := AudioOutputOptions{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudioOutputOptions) GetFormat() string {
	if o == nil || IsNil(o.Format.Get()) {
		var ret string
		return ret
	}
	return *o.Format.Get()
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudioOutputOptions) GetFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Format.Get(), o.Format.IsSet()
}

// HasFormat returns a boolean if a field has been set.
func (o *AudioOutputOptions) HasFormat() bool {
	if o != nil && o.Format.IsSet() {
		return true
	}

	return false
}

// SetFormat gets a reference to the given NullableString and assigns it to the Format field.
func (o *AudioOutputOptions) SetFormat(v string) {
	o.Format.Set(&v)
}

// SetFormatNil sets the value for Format to be an explicit nil
func (o *AudioOutputOptions) SetFormatNil() {
	o.Format.Set(nil)
}

// UnsetFormat ensures that no value is present for Format, not even an explicit nil
func (o *AudioOutputOptions) UnsetFormat() {
	o.Format.Unset()
}

// GetSampleRate returns the SampleRate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudioOutputOptions) GetSampleRate() int32 {
	if o == nil || IsNil(o.SampleRate.Get()) {
		var ret int32
		return ret
	}
	return *o.SampleRate.Get()
}

// GetSampleRateOk returns a tuple with the SampleRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudioOutputOptions) GetSampleRateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SampleRate.Get(), o.SampleRate.IsSet()
}

// HasSampleRate returns a boolean if a field has been set.
func (o *AudioOutputOptions) HasSampleRate() bool {
	if o != nil && o.SampleRate.IsSet() {
		return true
	}

	return false
}

// SetSampleRate gets a reference to the given NullableInt32 and assigns it to the SampleRate field.
func (o *AudioOutputOptions) SetSampleRate(v int32) {
	o.SampleRate.Set(&v)
}

// SetSampleRateNil sets the value for SampleRate to be an explicit nil
func (o *AudioOutputOptions) SetSampleRateNil() {
	o.SampleRate.Set(nil)
}

// UnsetSampleRate ensures that no value is present for SampleRate, not even an explicit nil
func (o *AudioOutputOptions) UnsetSampleRate() {
	o.SampleRate.Unset()
}

// GetStream returns the Stream field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AudioOutputOptions) GetStream() bool {
	if o == nil || IsNil(o.Stream.Get()) {
		var ret bool
		return ret
	}
	return *o.Stream.Get()
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AudioOutputOptions) GetStreamOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stream.Get(), o.Stream.IsSet()
}

// HasStream returns a boolean if a field has been set.
func (o *AudioOutputOptions) HasStream() bool {
	if o != nil && o.Stream.IsSet() {
		return true
	}

	return false
}

// SetStream gets a reference to the given NullableBool and assigns it to the Stream field.
func (o *AudioOutputOptions) SetStream(v bool) {
	o.Stream.Set(&v)
}

// SetStreamNil sets the value for Stream to be an explicit nil
func (o *AudioOutputOptions) SetStreamNil() {
	o.Stream.Set(nil)
}

// UnsetStream ensures that no value is present for Stream, not even an explicit nil
func (o *AudioOutputOptions) UnsetStream() {
	o.Stream.Unset()
}

func (o AudioOutputOptions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AudioOutputOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Format.IsSet() {
		toSerialize["format"] = o.Format.Get()
	}
	if o.SampleRate.IsSet() {
		toSerialize["sample_rate"] = o.SampleRate.Get()
	}
	if o.Stream.IsSet() {
		toSerialize["stream"] = o.Stream.Get()
	}
	return toSerialize, nil
}

type NullableAudioOutputOptions struct {
	value *AudioOutputOptions
	isSet bool
}

func (v NullableAudioOutputOptions) Get() *AudioOutputOptions {
	return v.value
}

func (v *NullableAudioOutputOptions) Set(val *AudioOutputOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableAudioOutputOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableAudioOutputOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAudioOutputOptions(val *AudioOutputOptions) *NullableAudioOutputOptions {
	return &NullableAudioOutputOptions{value: val, isSet: true}
}

func (v NullableAudioOutputOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAudioOutputOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
