/*
FastAPI

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harmonyspeech

import (
	"encoding/json"
)

// checks if the EmbedSpeakerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbedSpeakerRequest{}

// EmbedSpeakerRequest EmbedSpeakerRequest Used to create a Speaker Embedding form a provided audio, which can later be re-used for Text-to-Speech or Voice Conversion functionality. Please refer to the documentation whether an embedding is compatible between different models.
type EmbedSpeakerRequest struct {
	// the name of the model
	Model *string `json:"model,omitempty"`
	// Binary audio data to be processed, encoded in base64
	InputAudio           *string `json:"input_audio,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EmbedSpeakerRequest EmbedSpeakerRequest

// NewEmbedSpeakerRequest instantiates a new EmbedSpeakerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbedSpeakerRequest() *EmbedSpeakerRequest {
	this := EmbedSpeakerRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// NewEmbedSpeakerRequestWithDefaults instantiates a new EmbedSpeakerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbedSpeakerRequestWithDefaults() *EmbedSpeakerRequest {
	this := EmbedSpeakerRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *EmbedSpeakerRequest) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerRequest) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *EmbedSpeakerRequest) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *EmbedSpeakerRequest) SetModel(v string) {
	o.Model = &v
}

// GetInputAudio returns the InputAudio field value if set, zero value otherwise.
func (o *EmbedSpeakerRequest) GetInputAudio() string {
	if o == nil || IsNil(o.InputAudio) {
		var ret string
		return ret
	}
	return *o.InputAudio
}

// GetInputAudioOk returns a tuple with the InputAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerRequest) GetInputAudioOk() (*string, bool) {
	if o == nil || IsNil(o.InputAudio) {
		return nil, false
	}
	return o.InputAudio, true
}

// HasInputAudio returns a boolean if a field has been set.
func (o *EmbedSpeakerRequest) HasInputAudio() bool {
	if o != nil && !IsNil(o.InputAudio) {
		return true
	}

	return false
}

// SetInputAudio gets a reference to the given string and assigns it to the InputAudio field.
func (o *EmbedSpeakerRequest) SetInputAudio(v string) {
	o.InputAudio = &v
}

func (o EmbedSpeakerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbedSpeakerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.InputAudio) {
		toSerialize["input_audio"] = o.InputAudio
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EmbedSpeakerRequest) UnmarshalJSON(data []byte) (err error) {
	varEmbedSpeakerRequest := _EmbedSpeakerRequest{}

	err = json.Unmarshal(data, &varEmbedSpeakerRequest)

	if err != nil {
		return err
	}

	*o = EmbedSpeakerRequest(varEmbedSpeakerRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "input_audio")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEmbedSpeakerRequest struct {
	value *EmbedSpeakerRequest
	isSet bool
}

func (v NullableEmbedSpeakerRequest) Get() *EmbedSpeakerRequest {
	return v.value
}

func (v *NullableEmbedSpeakerRequest) Set(val *EmbedSpeakerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbedSpeakerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbedSpeakerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbedSpeakerRequest(val *EmbedSpeakerRequest) *NullableEmbedSpeakerRequest {
	return &NullableEmbedSpeakerRequest{value: val, isSet: true}
}

func (v NullableEmbedSpeakerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbedSpeakerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
