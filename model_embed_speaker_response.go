/*
Harmony Speech Engine API

API for the Harmony Speech Engine.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harmonyspeech

import (
	"encoding/json"
)

// checks if the EmbedSpeakerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbedSpeakerResponse{}

// EmbedSpeakerResponse EmbedSpeakerResult Result Speaker Embedding
type EmbedSpeakerResponse struct {
	Id *string `json:"id,omitempty"`
	// the name of the model
	Model *string `json:"model,omitempty"`
	Created *int32 `json:"created,omitempty"`
	// Speaker embedding data for the audio provided in the initial request, encoded in base64
	Data *string `json:"data,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EmbedSpeakerResponse EmbedSpeakerResponse

// NewEmbedSpeakerResponse instantiates a new EmbedSpeakerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbedSpeakerResponse() *EmbedSpeakerResponse {
	this := EmbedSpeakerResponse{}
	var model string = ""
	this.Model = &model
	return &this
}

// NewEmbedSpeakerResponseWithDefaults instantiates a new EmbedSpeakerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbedSpeakerResponseWithDefaults() *EmbedSpeakerResponse {
	this := EmbedSpeakerResponse{}
	var model string = ""
	this.Model = &model
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *EmbedSpeakerResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *EmbedSpeakerResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *EmbedSpeakerResponse) SetId(v string) {
	o.Id = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *EmbedSpeakerResponse) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerResponse) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *EmbedSpeakerResponse) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *EmbedSpeakerResponse) SetModel(v string) {
	o.Model = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *EmbedSpeakerResponse) GetCreated() int32 {
	if o == nil || IsNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerResponse) GetCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *EmbedSpeakerResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *EmbedSpeakerResponse) SetCreated(v int32) {
	o.Created = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *EmbedSpeakerResponse) GetData() string {
	if o == nil || IsNil(o.Data) {
		var ret string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbedSpeakerResponse) GetDataOk() (*string, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *EmbedSpeakerResponse) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given string and assigns it to the Data field.
func (o *EmbedSpeakerResponse) SetData(v string) {
	o.Data = &v
}

func (o EmbedSpeakerResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbedSpeakerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EmbedSpeakerResponse) UnmarshalJSON(data []byte) (err error) {
	varEmbedSpeakerResponse := _EmbedSpeakerResponse{}

	err = json.Unmarshal(data, &varEmbedSpeakerResponse)

	if err != nil {
		return err
	}

	*o = EmbedSpeakerResponse(varEmbedSpeakerResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "model")
		delete(additionalProperties, "created")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEmbedSpeakerResponse struct {
	value *EmbedSpeakerResponse
	isSet bool
}

func (v NullableEmbedSpeakerResponse) Get() *EmbedSpeakerResponse {
	return v.value
}

func (v *NullableEmbedSpeakerResponse) Set(val *EmbedSpeakerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbedSpeakerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbedSpeakerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbedSpeakerResponse(val *EmbedSpeakerResponse) *NullableEmbedSpeakerResponse {
	return &NullableEmbedSpeakerResponse{value: val, isSet: true}
}

func (v NullableEmbedSpeakerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbedSpeakerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


