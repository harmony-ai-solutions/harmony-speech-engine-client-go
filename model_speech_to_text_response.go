/*
Harmony Speech Engine API

API for the Harmony Speech Engine.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harmonyspeech

import (
	"encoding/json"
)

// checks if the SpeechToTextResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpeechToTextResponse{}

// SpeechToTextResponse SpeechToTextResponse Result text determined from audio and optional language tag
type SpeechToTextResponse struct {
	Id *string `json:"id,omitempty"`
	// the name of the model
	Model *string `json:"model,omitempty"`
	Created *int32 `json:"created,omitempty"`
	// text retrieved from the input audio
	Text *string `json:"text,omitempty"`
	Language NullableString `json:"language,omitempty"`
	Timestamps []map[string]interface{} `json:"timestamps,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpeechToTextResponse SpeechToTextResponse

// NewSpeechToTextResponse instantiates a new SpeechToTextResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpeechToTextResponse() *SpeechToTextResponse {
	this := SpeechToTextResponse{}
	var model string = ""
	this.Model = &model
	var text string = ""
	this.Text = &text
	return &this
}

// NewSpeechToTextResponseWithDefaults instantiates a new SpeechToTextResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpeechToTextResponseWithDefaults() *SpeechToTextResponse {
	this := SpeechToTextResponse{}
	var model string = ""
	this.Model = &model
	var text string = ""
	this.Text = &text
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *SpeechToTextResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechToTextResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *SpeechToTextResponse) SetId(v string) {
	o.Id = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *SpeechToTextResponse) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechToTextResponse) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *SpeechToTextResponse) SetModel(v string) {
	o.Model = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *SpeechToTextResponse) GetCreated() int32 {
	if o == nil || IsNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechToTextResponse) GetCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *SpeechToTextResponse) SetCreated(v int32) {
	o.Created = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *SpeechToTextResponse) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechToTextResponse) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *SpeechToTextResponse) SetText(v string) {
	o.Text = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpeechToTextResponse) GetLanguage() string {
	if o == nil || IsNil(o.Language.Get()) {
		var ret string
		return ret
	}
	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpeechToTextResponse) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// HasLanguage returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasLanguage() bool {
	if o != nil && o.Language.IsSet() {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given NullableString and assigns it to the Language field.
func (o *SpeechToTextResponse) SetLanguage(v string) {
	o.Language.Set(&v)
}
// SetLanguageNil sets the value for Language to be an explicit nil
func (o *SpeechToTextResponse) SetLanguageNil() {
	o.Language.Set(nil)
}

// UnsetLanguage ensures that no value is present for Language, not even an explicit nil
func (o *SpeechToTextResponse) UnsetLanguage() {
	o.Language.Unset()
}

// GetTimestamps returns the Timestamps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpeechToTextResponse) GetTimestamps() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}
	return o.Timestamps
}

// GetTimestampsOk returns a tuple with the Timestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpeechToTextResponse) GetTimestampsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Timestamps) {
		return nil, false
	}
	return o.Timestamps, true
}

// HasTimestamps returns a boolean if a field has been set.
func (o *SpeechToTextResponse) HasTimestamps() bool {
	if o != nil && !IsNil(o.Timestamps) {
		return true
	}

	return false
}

// SetTimestamps gets a reference to the given []map[string]interface{} and assigns it to the Timestamps field.
func (o *SpeechToTextResponse) SetTimestamps(v []map[string]interface{}) {
	o.Timestamps = v
}

func (o SpeechToTextResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpeechToTextResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if o.Language.IsSet() {
		toSerialize["language"] = o.Language.Get()
	}
	if o.Timestamps != nil {
		toSerialize["timestamps"] = o.Timestamps
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpeechToTextResponse) UnmarshalJSON(data []byte) (err error) {
	varSpeechToTextResponse := _SpeechToTextResponse{}

	err = json.Unmarshal(data, &varSpeechToTextResponse)

	if err != nil {
		return err
	}

	*o = SpeechToTextResponse(varSpeechToTextResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "model")
		delete(additionalProperties, "created")
		delete(additionalProperties, "text")
		delete(additionalProperties, "language")
		delete(additionalProperties, "timestamps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpeechToTextResponse struct {
	value *SpeechToTextResponse
	isSet bool
}

func (v NullableSpeechToTextResponse) Get() *SpeechToTextResponse {
	return v.value
}

func (v *NullableSpeechToTextResponse) Set(val *SpeechToTextResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSpeechToTextResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSpeechToTextResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpeechToTextResponse(val *SpeechToTextResponse) *NullableSpeechToTextResponse {
	return &NullableSpeechToTextResponse{value: val, isSet: true}
}

func (v NullableSpeechToTextResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpeechToTextResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


