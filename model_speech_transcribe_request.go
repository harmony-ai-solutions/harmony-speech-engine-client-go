/*
Harmony Speech Engine API

API for the Harmony Speech Engine.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harmonyspeech

import (
	"encoding/json"
)

// checks if the SpeechTranscribeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpeechTranscribeRequest{}

// SpeechTranscribeRequest SpeechTranscribeRequest Used to apply ASR on a provided audio file Depending on model selection, the caller may need to provide additional params. Based on OpenAI STT API; extended for Harmony Speech Engine features.
type SpeechTranscribeRequest struct {
	// the name of the model
	Model *string `json:"model,omitempty"`
	// Binary audio data of the reference speaker for synthesizing the text, encoded in base64
	InputAudio *string `json:"input_audio,omitempty"`
	GetLanguage NullableBool `json:"get_language,omitempty"`
	GetTimestamps NullableBool `json:"get_timestamps,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _SpeechTranscribeRequest SpeechTranscribeRequest

// NewSpeechTranscribeRequest instantiates a new SpeechTranscribeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpeechTranscribeRequest() *SpeechTranscribeRequest {
	this := SpeechTranscribeRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// NewSpeechTranscribeRequestWithDefaults instantiates a new SpeechTranscribeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpeechTranscribeRequestWithDefaults() *SpeechTranscribeRequest {
	this := SpeechTranscribeRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *SpeechTranscribeRequest) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechTranscribeRequest) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *SpeechTranscribeRequest) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *SpeechTranscribeRequest) SetModel(v string) {
	o.Model = &v
}

// GetInputAudio returns the InputAudio field value if set, zero value otherwise.
func (o *SpeechTranscribeRequest) GetInputAudio() string {
	if o == nil || IsNil(o.InputAudio) {
		var ret string
		return ret
	}
	return *o.InputAudio
}

// GetInputAudioOk returns a tuple with the InputAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpeechTranscribeRequest) GetInputAudioOk() (*string, bool) {
	if o == nil || IsNil(o.InputAudio) {
		return nil, false
	}
	return o.InputAudio, true
}

// HasInputAudio returns a boolean if a field has been set.
func (o *SpeechTranscribeRequest) HasInputAudio() bool {
	if o != nil && !IsNil(o.InputAudio) {
		return true
	}

	return false
}

// SetInputAudio gets a reference to the given string and assigns it to the InputAudio field.
func (o *SpeechTranscribeRequest) SetInputAudio(v string) {
	o.InputAudio = &v
}

// GetGetLanguage returns the GetLanguage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpeechTranscribeRequest) GetGetLanguage() bool {
	if o == nil || IsNil(o.GetLanguage.Get()) {
		var ret bool
		return ret
	}
	return *o.GetLanguage.Get()
}

// GetGetLanguageOk returns a tuple with the GetLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpeechTranscribeRequest) GetGetLanguageOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.GetLanguage.Get(), o.GetLanguage.IsSet()
}

// HasGetLanguage returns a boolean if a field has been set.
func (o *SpeechTranscribeRequest) HasGetLanguage() bool {
	if o != nil && o.GetLanguage.IsSet() {
		return true
	}

	return false
}

// SetGetLanguage gets a reference to the given NullableBool and assigns it to the GetLanguage field.
func (o *SpeechTranscribeRequest) SetGetLanguage(v bool) {
	o.GetLanguage.Set(&v)
}
// SetGetLanguageNil sets the value for GetLanguage to be an explicit nil
func (o *SpeechTranscribeRequest) SetGetLanguageNil() {
	o.GetLanguage.Set(nil)
}

// UnsetGetLanguage ensures that no value is present for GetLanguage, not even an explicit nil
func (o *SpeechTranscribeRequest) UnsetGetLanguage() {
	o.GetLanguage.Unset()
}

// GetGetTimestamps returns the GetTimestamps field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SpeechTranscribeRequest) GetGetTimestamps() bool {
	if o == nil || IsNil(o.GetTimestamps.Get()) {
		var ret bool
		return ret
	}
	return *o.GetTimestamps.Get()
}

// GetGetTimestampsOk returns a tuple with the GetTimestamps field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SpeechTranscribeRequest) GetGetTimestampsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.GetTimestamps.Get(), o.GetTimestamps.IsSet()
}

// HasGetTimestamps returns a boolean if a field has been set.
func (o *SpeechTranscribeRequest) HasGetTimestamps() bool {
	if o != nil && o.GetTimestamps.IsSet() {
		return true
	}

	return false
}

// SetGetTimestamps gets a reference to the given NullableBool and assigns it to the GetTimestamps field.
func (o *SpeechTranscribeRequest) SetGetTimestamps(v bool) {
	o.GetTimestamps.Set(&v)
}
// SetGetTimestampsNil sets the value for GetTimestamps to be an explicit nil
func (o *SpeechTranscribeRequest) SetGetTimestampsNil() {
	o.GetTimestamps.Set(nil)
}

// UnsetGetTimestamps ensures that no value is present for GetTimestamps, not even an explicit nil
func (o *SpeechTranscribeRequest) UnsetGetTimestamps() {
	o.GetTimestamps.Unset()
}

func (o SpeechTranscribeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpeechTranscribeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.InputAudio) {
		toSerialize["input_audio"] = o.InputAudio
	}
	if o.GetLanguage.IsSet() {
		toSerialize["get_language"] = o.GetLanguage.Get()
	}
	if o.GetTimestamps.IsSet() {
		toSerialize["get_timestamps"] = o.GetTimestamps.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SpeechTranscribeRequest) UnmarshalJSON(data []byte) (err error) {
	varSpeechTranscribeRequest := _SpeechTranscribeRequest{}

	err = json.Unmarshal(data, &varSpeechTranscribeRequest)

	if err != nil {
		return err
	}

	*o = SpeechTranscribeRequest(varSpeechTranscribeRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "input_audio")
		delete(additionalProperties, "get_language")
		delete(additionalProperties, "get_timestamps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSpeechTranscribeRequest struct {
	value *SpeechTranscribeRequest
	isSet bool
}

func (v NullableSpeechTranscribeRequest) Get() *SpeechTranscribeRequest {
	return v.value
}

func (v *NullableSpeechTranscribeRequest) Set(val *SpeechTranscribeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSpeechTranscribeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSpeechTranscribeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpeechTranscribeRequest(val *SpeechTranscribeRequest) *NullableSpeechTranscribeRequest {
	return &NullableSpeechTranscribeRequest{value: val, isSet: true}
}

func (v NullableSpeechTranscribeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpeechTranscribeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


