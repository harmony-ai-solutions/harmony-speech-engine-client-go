/*
Harmony Speech Engine API

API for the Harmony Speech Engine.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package harmonyspeech

import (
	"encoding/json"
)

// checks if the VoiceConversionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VoiceConversionRequest{}

// VoiceConversionRequest VoiceConversionRequest Used to convert the tone or nature of a voice in a specific way. Depending on model selection, the caller may need to provide additional params.
type VoiceConversionRequest struct {
	// the name of the model
	Model *string `json:"model,omitempty"`
	// Binary audio data to be processed, encoded in base64
	SourceAudio *string `json:"source_audio,omitempty"`
	TargetAudio NullableString `json:"target_audio,omitempty"`
	TargetEmbedding NullableString `json:"target_embedding,omitempty"`
	GenerationOptions NullableGenerationOptions `json:"generation_options,omitempty"`
	OutputOptions NullableAudioOutputOptions `json:"output_options,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VoiceConversionRequest VoiceConversionRequest

// NewVoiceConversionRequest instantiates a new VoiceConversionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVoiceConversionRequest() *VoiceConversionRequest {
	this := VoiceConversionRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// NewVoiceConversionRequestWithDefaults instantiates a new VoiceConversionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVoiceConversionRequestWithDefaults() *VoiceConversionRequest {
	this := VoiceConversionRequest{}
	var model string = ""
	this.Model = &model
	return &this
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *VoiceConversionRequest) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConversionRequest) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *VoiceConversionRequest) SetModel(v string) {
	o.Model = &v
}

// GetSourceAudio returns the SourceAudio field value if set, zero value otherwise.
func (o *VoiceConversionRequest) GetSourceAudio() string {
	if o == nil || IsNil(o.SourceAudio) {
		var ret string
		return ret
	}
	return *o.SourceAudio
}

// GetSourceAudioOk returns a tuple with the SourceAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VoiceConversionRequest) GetSourceAudioOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAudio) {
		return nil, false
	}
	return o.SourceAudio, true
}

// HasSourceAudio returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasSourceAudio() bool {
	if o != nil && !IsNil(o.SourceAudio) {
		return true
	}

	return false
}

// SetSourceAudio gets a reference to the given string and assigns it to the SourceAudio field.
func (o *VoiceConversionRequest) SetSourceAudio(v string) {
	o.SourceAudio = &v
}

// GetTargetAudio returns the TargetAudio field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoiceConversionRequest) GetTargetAudio() string {
	if o == nil || IsNil(o.TargetAudio.Get()) {
		var ret string
		return ret
	}
	return *o.TargetAudio.Get()
}

// GetTargetAudioOk returns a tuple with the TargetAudio field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoiceConversionRequest) GetTargetAudioOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetAudio.Get(), o.TargetAudio.IsSet()
}

// HasTargetAudio returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasTargetAudio() bool {
	if o != nil && o.TargetAudio.IsSet() {
		return true
	}

	return false
}

// SetTargetAudio gets a reference to the given NullableString and assigns it to the TargetAudio field.
func (o *VoiceConversionRequest) SetTargetAudio(v string) {
	o.TargetAudio.Set(&v)
}
// SetTargetAudioNil sets the value for TargetAudio to be an explicit nil
func (o *VoiceConversionRequest) SetTargetAudioNil() {
	o.TargetAudio.Set(nil)
}

// UnsetTargetAudio ensures that no value is present for TargetAudio, not even an explicit nil
func (o *VoiceConversionRequest) UnsetTargetAudio() {
	o.TargetAudio.Unset()
}

// GetTargetEmbedding returns the TargetEmbedding field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoiceConversionRequest) GetTargetEmbedding() string {
	if o == nil || IsNil(o.TargetEmbedding.Get()) {
		var ret string
		return ret
	}
	return *o.TargetEmbedding.Get()
}

// GetTargetEmbeddingOk returns a tuple with the TargetEmbedding field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoiceConversionRequest) GetTargetEmbeddingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TargetEmbedding.Get(), o.TargetEmbedding.IsSet()
}

// HasTargetEmbedding returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasTargetEmbedding() bool {
	if o != nil && o.TargetEmbedding.IsSet() {
		return true
	}

	return false
}

// SetTargetEmbedding gets a reference to the given NullableString and assigns it to the TargetEmbedding field.
func (o *VoiceConversionRequest) SetTargetEmbedding(v string) {
	o.TargetEmbedding.Set(&v)
}
// SetTargetEmbeddingNil sets the value for TargetEmbedding to be an explicit nil
func (o *VoiceConversionRequest) SetTargetEmbeddingNil() {
	o.TargetEmbedding.Set(nil)
}

// UnsetTargetEmbedding ensures that no value is present for TargetEmbedding, not even an explicit nil
func (o *VoiceConversionRequest) UnsetTargetEmbedding() {
	o.TargetEmbedding.Unset()
}

// GetGenerationOptions returns the GenerationOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoiceConversionRequest) GetGenerationOptions() GenerationOptions {
	if o == nil || IsNil(o.GenerationOptions.Get()) {
		var ret GenerationOptions
		return ret
	}
	return *o.GenerationOptions.Get()
}

// GetGenerationOptionsOk returns a tuple with the GenerationOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoiceConversionRequest) GetGenerationOptionsOk() (*GenerationOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.GenerationOptions.Get(), o.GenerationOptions.IsSet()
}

// HasGenerationOptions returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasGenerationOptions() bool {
	if o != nil && o.GenerationOptions.IsSet() {
		return true
	}

	return false
}

// SetGenerationOptions gets a reference to the given NullableGenerationOptions and assigns it to the GenerationOptions field.
func (o *VoiceConversionRequest) SetGenerationOptions(v GenerationOptions) {
	o.GenerationOptions.Set(&v)
}
// SetGenerationOptionsNil sets the value for GenerationOptions to be an explicit nil
func (o *VoiceConversionRequest) SetGenerationOptionsNil() {
	o.GenerationOptions.Set(nil)
}

// UnsetGenerationOptions ensures that no value is present for GenerationOptions, not even an explicit nil
func (o *VoiceConversionRequest) UnsetGenerationOptions() {
	o.GenerationOptions.Unset()
}

// GetOutputOptions returns the OutputOptions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VoiceConversionRequest) GetOutputOptions() AudioOutputOptions {
	if o == nil || IsNil(o.OutputOptions.Get()) {
		var ret AudioOutputOptions
		return ret
	}
	return *o.OutputOptions.Get()
}

// GetOutputOptionsOk returns a tuple with the OutputOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VoiceConversionRequest) GetOutputOptionsOk() (*AudioOutputOptions, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputOptions.Get(), o.OutputOptions.IsSet()
}

// HasOutputOptions returns a boolean if a field has been set.
func (o *VoiceConversionRequest) HasOutputOptions() bool {
	if o != nil && o.OutputOptions.IsSet() {
		return true
	}

	return false
}

// SetOutputOptions gets a reference to the given NullableAudioOutputOptions and assigns it to the OutputOptions field.
func (o *VoiceConversionRequest) SetOutputOptions(v AudioOutputOptions) {
	o.OutputOptions.Set(&v)
}
// SetOutputOptionsNil sets the value for OutputOptions to be an explicit nil
func (o *VoiceConversionRequest) SetOutputOptionsNil() {
	o.OutputOptions.Set(nil)
}

// UnsetOutputOptions ensures that no value is present for OutputOptions, not even an explicit nil
func (o *VoiceConversionRequest) UnsetOutputOptions() {
	o.OutputOptions.Unset()
}

func (o VoiceConversionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VoiceConversionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.SourceAudio) {
		toSerialize["source_audio"] = o.SourceAudio
	}
	if o.TargetAudio.IsSet() {
		toSerialize["target_audio"] = o.TargetAudio.Get()
	}
	if o.TargetEmbedding.IsSet() {
		toSerialize["target_embedding"] = o.TargetEmbedding.Get()
	}
	if o.GenerationOptions.IsSet() {
		toSerialize["generation_options"] = o.GenerationOptions.Get()
	}
	if o.OutputOptions.IsSet() {
		toSerialize["output_options"] = o.OutputOptions.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VoiceConversionRequest) UnmarshalJSON(data []byte) (err error) {
	varVoiceConversionRequest := _VoiceConversionRequest{}

	err = json.Unmarshal(data, &varVoiceConversionRequest)

	if err != nil {
		return err
	}

	*o = VoiceConversionRequest(varVoiceConversionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "source_audio")
		delete(additionalProperties, "target_audio")
		delete(additionalProperties, "target_embedding")
		delete(additionalProperties, "generation_options")
		delete(additionalProperties, "output_options")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVoiceConversionRequest struct {
	value *VoiceConversionRequest
	isSet bool
}

func (v NullableVoiceConversionRequest) Get() *VoiceConversionRequest {
	return v.value
}

func (v *NullableVoiceConversionRequest) Set(val *VoiceConversionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVoiceConversionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVoiceConversionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVoiceConversionRequest(val *VoiceConversionRequest) *NullableVoiceConversionRequest {
	return &NullableVoiceConversionRequest{value: val, isSet: true}
}

func (v NullableVoiceConversionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVoiceConversionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


